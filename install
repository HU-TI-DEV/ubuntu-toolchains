# bash script for installing the github.com/wovo
# C++ embedded development environment on ubuntu

# install what is available from the repositories
sudo apt install -y git make gcc-10 avrdude python-dev libsfml-dev codelite usb-dev libusb-1.0.0-dev

# install the stuff from my repository
git clone https://www.github.com/wovo/bmptk
git clone https://www.github.com/wovo/hwlib
git clone https://www.github.com/wovo/hwlib-examples
git clone https://www.github.com/wovo/godafoss

# install the AVR8 compiler
SOURCE=https://github.com/CrustyAuklet/avr-libstdcxx/releases/download/v10.2.0/avr-gcc-10.2.0-P0829-x86_64-linux.tar.gz 
DIR=avr-gcc-10.2.0-P0829 
wget $SOURCE -O ubuntu-toolchains/avr8-gcc.tgz
tar -xf ubuntu-toolchains/avr8-gcc.tgz
mv $DIR $PWD/avr-gcc
sudo python ubuntu-toolchains/add_path.py $PWD/avr-gcc/bin

# install the ARM/Cortex compiler
SOURCE=https://github.com/xpack-dev-tools/arm-none-eabi-gcc-xpack/releases/download/v10.2.1-1.1/xpack-arm-none-eabi-gcc-10.2.1-1.1-linux-x64.tar.gz
DIR=xpack-arm-none-eabi-gcc-10.2.1-1.1
wget $SOURCE -O ubuntu-toolchains/arm-gcc.tgz
tar -xf ubuntu-toolchains/arm-gcc.tgz
mv $DIR $PWD/arm-gcc
sudo python ubuntu-toolchains/add_path.py $PWD/arm-gcc/bin

# build and install the stm32 cli
git clone https://github.com/texane/stlink 
cd stlink
make build
sudo chown root st-flash
sudo chmod +s st-flash
cd ..
sudo python ubuntu-toolchains/add_path.py $PWD/stlink

# build and install the teensy loader
git clone https://github.com/PaulStoffregen/teensy_loader_cli
cd teensy_loader_cli
sudo chown root teensy_loader_cli
sudo chmod +s teensy_loader_cli
cd ..
sudo python ubuntu-toolchains/add_path.py $PWD/teensy_loader_cli

# build the lpc21_isp tool
# and set root permission for TTY access
cd bmptk/tools/lpc21isp_197
make
sudo chown root lpc21isp_hr_linux.exe
sudo chmod +s lpc21isp_hr_linux.exe
sudo chmod +s `which avrdude`
cd ../../..
